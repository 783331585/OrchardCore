@inject IShortcodeTableManager ShortcodeTableManager
@inject JavaScriptEncoder JavaScriptEncoder
@using System.Text.Encodings.Web
@using System.Text.Json

@* To use a shortcode popup on an input field use .shortcode-popover
and call @await DisplayAsync(await New.ShortcodePopover()) from the fields view
*@

@* Inject the popover only once per page *@
@if (!Context.Items.ContainsKey("ShortcodePopover"))
{
    Context.Items["ShortcodePopover"] = new object();
    var shortcodeTable = await ShortcodeTableManager.GetShortcodeTable();

    var shortcodeDescriptors = JsonSerializer.Serialize(shortcodeTable, new JsonSerializerOptions
        {
            Encoder = JavaScriptEncoder,
            WriteIndented = false,
            PropertyNamingPolicy = JsonNamingPolicy.CamelCase
        });

    <script asp-src="~/OrchardCore.Shortcodes/Scripts/shortcodes.min.js" debug-src="~/OrchardCore.Shortcodes/Scripts/shortcodes.js" asp-name="shortcodes" at="Foot" depends-on="jQuery, vuejs, vue-multiselect"></script>
    <style asp-src="~/OrchardCore.Shortcodes/Styles/shortcodes.min.css" debug-src="~/OrchardCore.Shortcodes/Styles/shortcodes.css" asp-name="shortcodes" depends-on="vue-multiselect"></style>

    @*  This svg is only used by the trumbowyg editors, but is placed here, once, to reduce complexity
        The icon for using a .shortcode-popover helper is included via javascript when wrapping the .shortcode-popover.
    *@
    <div class="d-none">
        <svg xmlns="http://www.w3.org/2000/svg">
            <symbol id="trumbowyg-insert-shortcode" viewBox="0 0 20 20" >
                <path d="M16 4.2v1.5h2.5v12.5H16v1.5h4V4.2h-4zM4.2 19.8h4v-1.5H5.8V5.8h2.5V4.2h-4l-.1 15.6zm5.1-3.1l1.4.6 4-10-1.4-.6-4 10z"></path>
            </symbol>
        </svg>
    </div>

    @* Place at footer in case it is affected by being inline with an element. *@
    <zone name="Footer">
        <div id="shortcode-popover-app-container" style="display: none">
            <div id="shortcode-popover-app-content" data-shortcodes='@Html.Raw(@shortcodeDescriptors)'>
                <div class="mx-2 mb-3">
                    <vue-multiselect v-model="value"
                        placeholder="@T["Type to search"]"
                        select-label="@T["Select"]"
                        :options="shortcodes"
                        :multiple="false"
                        track-by="name"
                        label="name"
                        :show-labels="false"
                        :close-on-select="true"
                        >
                    </vue-multiselect>
                    <p v-html="value.hint"></p>
                    <div class="float-right" v-if="showControls">
                        <button type="button" class="btn btn-sm btn-primary" v-on:click="success">@T["Ok"]</button>
                        <button type="button" class="btn btn-sm btn-secondary" v-on:click="cancel">@T["Cancel"]</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="d-none" id="shortcode-selector-error" data-localized="@T["Shortcode app opened without a selector"]"></div>
        <div class="d-none" id="shortcode-title" data-localized="@T["Select a shortcode"]"></div>
    </zone>
    <script depends-on="shortcodes" at="Foot">
        initializeShortcodes(document.getElementById("shortcode-popover-app-content"));
    </script>
}