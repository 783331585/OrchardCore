@inject IAuthorizationService AuthorizationService
@inject IContentManager ContentManager

@{
    ContentItem contentItem = Model.ContentItem;
    var hasPublished = await ContentManager.HasPublishedVersionAsync(contentItem);
    var hasDraft = contentItem.HasDraft();
    var hasCloneOwnPermission = await AuthorizationService.AuthorizeAsync(User, OrchardCore.Contents.Permissions.CloneOwnContent, contentItem);
    var hasClonePermission = await AuthorizationService.AuthorizeAsync(User, OrchardCore.Contents.Permissions.CloneContent, contentItem);
    var hasDeleteOwnPermission = await AuthorizationService.AuthorizeAsync(User, OrchardCore.Contents.Permissions.DeleteOwnContent, contentItem);
    var hasDeletePermission = await AuthorizationService.AuthorizeAsync(User, OrchardCore.Contents.Permissions.DeleteContent, contentItem);
    var hasEditOwnPermission = await AuthorizationService.AuthorizeAsync(User, OrchardCore.Contents.Permissions.EditOwnContent, contentItem);
    var hasEditPermission = await AuthorizationService.AuthorizeAsync(User, OrchardCore.Contents.Permissions.EditContent, contentItem);
    var hasPreviewOwnPermission = await AuthorizationService.AuthorizeAsync(User, OrchardCore.Contents.Permissions.PreviewOwnContent, contentItem);
    var hasPreviewPermission = await AuthorizationService.AuthorizeAsync(User, OrchardCore.Contents.Permissions.PreviewContent, contentItem);
    var hasPublishOwnPermission = await AuthorizationService.AuthorizeAsync(User, OrchardCore.Contents.Permissions.PublishOwnContent, contentItem);
    var hasPublishPermission = await AuthorizationService.AuthorizeAsync(User, OrchardCore.Contents.Permissions.PublishContent, contentItem);
}

<a asp-action="Publish" asp-controller="Admin" asp-route-area="OrchardCore.Contents" asp-route-contentItemId="@contentItem.ContentItemId" asp-route-returnUrl="@FullRequestPath" itemprop="UnsafeUrl" class="dropdown-item btn-sm @(hasDraft && ((hasPublishOwnPermission && contentItem.Owner == User.Identity.Name) || hasPublishPermission)? string.Empty : "disabled")">@T["Publish Draft"]</a>
<a asp-action="Preview" asp-controller="Item" asp-route-area="OrchardCore.Contents" asp-route-contentItemId="@contentItem.ContentItemId" class="dropdown-item btn-sm @(hasDraft && ((hasPreviewOwnPermission && contentItem.Owner == User.Identity.Name) || hasPreviewPermission)? string.Empty : "disabled")">@T["Preview Draft"]</a>
<div class="dropdown-divider"></div>

<a asp-action="DiscardDraft" asp-controller="Admin" asp-route-area="OrchardCore.Contents" asp-route-contentItemId="@contentItem.ContentItemId" asp-route-returnUrl="@FullRequestPath" itemprop="UnsafeUrl RemoveUrl" data-title=@T["Discard Draft"] data-message=@T["Are you sure you want to discard this draft?"] data-ok-text="@T["Yes"]" data-cancel-text="@T["No"]" data-ok-class="btn-primary" class="dropdown-item btn-sm @(hasDraft && hasPublished ? string.Empty : "disabled")">@T["Discard Draft"]</a>
<a asp-action="Unpublish" asp-controller="Admin" asp-route-area="OrchardCore.Contents" asp-route-contentItemId="@contentItem.ContentItemId" asp-route-returnUrl="@FullRequestPath" itemprop="UnsafeUrl RemoveUrl" data-title=@T["Unpublish"] data-message=@T["Are you sure you want to unpublish this item?"] data-ok-text="@T["Yes"]" data-cancel-text="@T["No"]" data-ok-class="btn-primary" class="dropdown-item btn-sm @(hasPublished && ((hasEditOwnPermission && contentItem.Owner == User.Identity.Name) || hasEditPermission) ? string.Empty : "disabled")">@T["Unpublish"]</a>
<a remove-for="@contentItem" class="dropdown-item btn-sm @((hasDraft || hasPublished) && ((hasDeleteOwnPermission && contentItem.Owner == User.Identity.Name) || hasDeletePermission) ? string.Empty : "disabled")" asp-route-returnUrl="@FullRequestPath" itemprop="RemoveUrl UnsafeUrl" data-title="@T["Delete"]" data-message="@T["Are you sure you want to delete this content item?"]">@T["Delete"]</a>
<a asp-action="Clone" asp-controller="Admin" asp-route-area="OrchardCore.Contents" asp-route-contentItemId="@contentItem.ContentItemId" asp-route-returnUrl="@FullRequestPath" itemprop="UnsafeUrl" class="dropdown-item btn-sm @((hasCloneOwnPermission && contentItem.Owner == User.Identity.Name) || hasClonePermission ? string.Empty : "disabled")">@T["Clone"]</a>
